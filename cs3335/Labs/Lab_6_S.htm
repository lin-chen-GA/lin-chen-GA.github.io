<!DOCTYPE html>
<html>
	<head>
		<title>C</title>
		<link rel="stylesheet" href="../../css/atelier-sulphurpool-light.css" type="text/css">
		<script src="../../js/google-code-prettify/run_prettify.js?autoload=true&amp;lang=css"></script>
		<style>
			div.title {color: navy; font-weight: bold; width: 80%; font-size: 32px; text-align: center; position: relative; margin: auto;}
			div.subtitle {color: navy; font-weight: bold; width: 80%; font-size: 24px; text-align: position: relative; margin: auto;}
			div.block {color: navy; font-weight: bold; width: 80%; border-style: solid; padding: 5px; position: relative; margin: 10px auto; border-radius: 5px;}
			span {color: red; font-weight: bold;}
		</style>
	</head>
	<body>
		<div class = "title">
			Lab 6 Solution
		</div>

		<div class = "block">
		<pre class = "prettyprint linenums">
// main.c
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;time.h&gt;
#include "io.h"
#include "util.h"

int main()
{
	srand(time(NULL));

	printf("Read row number: ");
	int row = readNum();
	printf("Read column number: ");
	int column = readNum();

	int array[row][column];
	assign2DArray(row, column, array);
	display2DArray(row, column, array);

	printf("--------------------\n");

	int arraySortedByRow[row][column];
	sortByRow(row, column, array, arraySortedByRow);

	display2DArray(row, column, array);
	printf("\n");
	display2DArray(row, column, arraySortedByRow);

	return 0;
}
		</pre>
		</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
// io.h
#ifndef IO_H
#define IO_H

int readNum();

void display2DArray(int row, int column, int array[][column]);

#endif
		</pre>
		</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
// util.h
#ifndef UTIL_H
#define UTIL_H

void sort1DArray(int size, int array[]);

void assign2DArray(int row, int column, int array[][column]);

void copy2DArray(int row, int column, int array[][column], int copy[][column]);

void copyRow(int row, int column, int array[][column], int targetRow, int copy[]);

void copyRowBack(int row, int column, int array[][column], int targetRow, int copy[]);

void sortByRow(int row, int column, int array[][column], int sorted[][column]);

#endif
		</pre>
		</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
// io.c
#include &lt;stdio.h&gt;
#include "io.h"

int readNum()
{
	int num;
	scanf("%d", &amp;num);

	return num;
}

void display2DArray(int row, int column, int array[][column])
{
	for(int i = 0; i &lt; row; i++)
	{
		for(int j = 0; j &lt; column; j++)
			printf("%5d", array[i][j]);
		printf("\n");
	}
}
		</pre>
		</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
// util.c
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include "util.h"

void sort1DArray(int size, int array[])
{
   for (int i = 0; i &lt; size-1; i++)
       for (int j = 0; j &lt; size-i-1; j++)
           if (array[j] &gt; array[j+1])
	   {
		   int temp = array[j];
		   array[j] = array[j+1];
		   array[j+1] = temp;
	   }
}

void assign2DArray(int row, int column, int array[][column])
{
	for(int i = 0; i &lt; row; i++)
		for(int j = 0; j &lt; column; j++)
			array[i][j] = rand()%10+1;
}

void copy2DArray(int row, int column, int array[][column], int copy[][column])
{
	for(int i = 0; i &lt; row; i++)
		for(int j = 0; j &lt; column; j++)
			copy[i][j] = array[i][j];
}

void copyRow(int row, int column, int array[][column], int targetRow, int copy[])
{
	for(int i = 0; i &lt; column; i++)
		copy[i] = array[targetRow][i];
}

void copyRowBack(int row, int column, int array[][column], int targetRow, int copy[])
{
	for(int i = 0; i &lt; column; i++)
		array[targetRow][i] = copy[i];
}

void sortByRow(int row, int column, int array[][column], int sorted[][column])
{
	copy2DArray(row, column, array, sorted);

	for(int i = 0; i &lt; row; i++)
	{
		int rowCopy[column];
		copyRow(row, column, sorted, i, rowCopy);
		sort1DArray(column, rowCopy);
		//display1DArray(column, rowCopy);
		copyRowBack(row, column, sorted, i, rowCopy);
	}
}
		</pre>
		</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
vpath %.h include
vpath %.c src

SRC = src
OBJECTIVES = main.o io.o util.o
CFLAGS = -I include
CC = gcc
PROG = Sorting
DEST = ~/.local/bin

$(PROG): $(OBJECTIVES)
	$(CC) -o $(PROG) $(OBJECTIVES)

main.o: main.c io.h util.h
	$(CC) -c $(SRC)/main.c $(CFLAGS)
io.o: io.c io.h
	$(CC) -c $(SRC)/io.c $(CFLAGS)
util.o: util.c util.h
	$(CC) -c $(SRC)/util.c $(CFLAGS)

.PHONY: clean
clean:
	-rm -f *.o $(PROG)

.PHONY: install
install: $(PROG)
	-mkdir $(DEST)
	cp $(PROG) $(DEST)

.PHONY: uninstall
uninstall:
	-rm $(DEST)/$(PROG)
		</pre>
		</div>
	</body>
</html>
