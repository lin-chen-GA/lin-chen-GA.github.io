<!DOCTYPE html>
<html>
	<head>
		<title>C</title>
		<link rel="stylesheet" href="../../css/atelier-sulphurpool-light.css" type="text/css">
		<script src="../../js/google-code-prettify/run_prettify.js?autoload=true&amp;lang=css"></script>
		<style>
			div.title {color: navy; font-weight: bold; width: 80%; font-size: 32px; text-align: center; position: relative; margin: auto;}
			div.subtitle {color: navy; font-weight: bold; width: 80%; font-size: 24px; text-align: position: relative; margin: auto;}
			div.block {color: navy; font-weight: bold; width: 80%; border-style: solid; padding: 5px; position: relative; margin: 10px auto; border-radius: 5px;}
			span {color: red; font-weight: bold;}
		</style>
	</head>
	<body>
		<div class = "title">
			Solution of Lab 10
		</div>

		<div class = "block">
		<pre class = "prettyprint linenums">
// main.c
#include "Record.h"
#include "Student.h"
#include "io.h"
#include "util.h"

int main()
{
	int num = getNum();

	Student *students = readStudents(num);

	sortStudents(students, num);

	writeStudents(students, num);

	free(students);

	return 0;

}
		</pre>
		</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
// Record.h
#ifndef RECORD_H
#define RECORD_H

typedef struct
{
	int id;
	float gpa;
} Record;

#endif
		</pre>
		</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
// Student.h
#ifndef STUDENT_H
#define STUDENT_H

#include "Record.h"

typedef struct
{
	char name[100];
	Record record;
} Student;

#endif
		</pre>
		</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
// io.h
#ifndef IO_H
#define IO_H

int getNum();

float readGPA();

int readID();

char *getString();

Student *readStudents(int size);

void writeStudents(Student *students, int size);

void display(Student *students, int size);

#endif
		</pre>
		</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
// io.c
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include "Record.h"
#include "Student.h"

int getNum()
{
	int num;
	printf("Enter the number of the students:");

	scanf("%d", &amp;num);

	getc(stdin); // read \n character

	return num;
}

float readGPA()
{
	float gpa;
	printf("Enter gpa:");

	scanf("%f", &amp;gpa);

	getc(stdin); // read \n character

	return gpa;
}

int readID()
{
	int id;
	printf("Enter ID:");

	scanf("%d", &amp;id);

	getc(stdin); // read \n character

	return id;
}

char *getString()
{
	printf("Enter name:");
	char *str = (char *) malloc(100*sizeof(char));
	fgets(str, 100, stdin);

	str[strlen(str)-1] = '\0'; // remove \n in the string

	return str;
}

Student *readStudents(int size)
{
	Student *students = (Student *) malloc(size*sizeof(Student));

	for(int i = 0; i &lt; size; i++)
	{
		char *temp;
		temp = getString();
		strcpy(students[i].name, temp);
		free(temp);
		students[i].record.id = readID();
		students[i].record.gpa = readGPA();
	}

	return students;
}

void writeStudents(Student *students, int size)
{
	FILE *fp;
	fp = fopen ("info.csv", "w"); // open a file with writing mode

	// exit program if the file cannot be openned
	if (fp == NULL)
        	exit(EXIT_FAILURE);

	for(int i = 0; i &lt; size; i++)
	{
		fprintf(fp, "%s, %d, %.2f\n", students[i].name, students[i].record.id, students[i].record.gpa);
	}
}

void display(Student *students, int size)
{
	for(int i = 0; i &lt; size; i++)
		printf("%s, %d, %f\n", students[i].name, students[i].record.id, students[i].record.gpa);
}
		</pre>
		</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
// util.h
#ifndef UTIL_H
#define UTIL_H

void sortStudents(Student *students, int size);

#endif
		</pre>
		</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
// util.c
#include "Student.h"
#include "Record.h"

void sortStudents(Student *students, int size)
{
	for (int i = 0; i &lt; size-1; i++)
	 	for (int j = 0; j &lt; size-i-1; j++)
		{
	     		if (students[j].record.gpa &lt; students[j+1].record.gpa)
	     		{
				Student s;
				s = students[j];
				students[j] = students[j+1];
				students[j+1] = s;
	     		}
		}
}
		</pre>
		</div>
	</body>
</html>
